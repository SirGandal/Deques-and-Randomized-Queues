Memory analysis of an instance for a Deque of N items:

// inner class overhead: 8 bytes
private class Node {
    Item item; // reference: generic depending on type, max 8 bytes for double and long
    Node previous; // reference: 8 bytes
    Node next; // reference: 8 bytes
}
  
A deck of N items is going to contain N nodes:
Each of the nodes is going to be an object and as a consequence it will have an overhead of 16 bytes
There can be a padding at the end to make the entire object a multiple of 8 bytes.
  
An object of Node will have size (no need of extra padding at the end): 
16 (object overhead) + 8 (extra inner class overhead) + 8 (Item) + 8 (ref) + 8 (ref) = 48 bytes
  
N Nodes objects will then occupy N*48 bytes.
  
private int size = 0; // 4 bytes

Total memory cost: N*48 + 4
 
  